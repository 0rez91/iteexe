/**
 * plugin.min.js
 *
 * Released under Attribution-ShareAlike 4.0 International License.
 * Author: Ignacio Gros (http://gros.es/) for http://exelearning.net/
 *
 * License: http://creativecommons.org/licenses/by-sa/4.0/
 */

/**
 * Create/edit simple, inline HTML and AJAX tooltips
 * To be used with http://qtip2.com/, licensed MIT, GPL (files in exe/webui/scripts/exe_tooltips)
 */
tinymce.PluginManager.add('tooltips', function(editor, url) {
	
	TooltipDialog = {
		
		globals : {
			instructionsBlockTopPosition : 0
		},
		
		// Load the previous values (if needed)
		getValues : function(){
			
			var block1 = document.getElementById("type1-options");
			var block2 = document.getElementById("type2-options");
			var block3 = document.getElementById("type3-options");
						
			TooltipDialog.globals.instructionsBlockTopPosition = block1.style.top;
			block2.style.display = "none";
			block3.style.display = "none";
			
		},
		
		// Create or update the content
		insert : function(content){
			
			alert("Insert")
			
			// Close the editor
			editor.windowManager.close();			
			
		},
		
		getNodesList : function(){
			var i;
			var arrayName = "tinymce_anchors";
			var w = window;
			var html = "";
			var options = [];
			options.push({text: _("---"), value: ''})
			if (w) {
				if (typeof w[arrayName]=="object") {
					var myArray = w[arrayName];
					for (i=0;i<myArray.length;i++){
						var n = myArray[i].replace("exe-node:","");
						var checkN = n.split("#");
						if (checkN[1]=="auto_top") n = n.replace("#auto_top","");
						n = decodeURIComponent(n);
						var newOption = '<option value="' + myArray[i] + '">' + n + '</option>\n';
						if (html.indexOf(newOption)==-1) {
							html += newOption;
							options.push({text: n, value: myArray[i]})
						}
					}
				}
			}
			return options;
		},
		
		openToolTipDialog : function(){
			
			// Advanced dialog shows general+advanced tabs
			win = editor.windowManager.open({
				title: _('Tooltip'),
				bodyType: 'tabpanel',
				body: [
					{
						title: _('General'),
						type: 'form',
						items: [
							{
								type: 'listbox',
								minWidth: 150,
								name: 'type',
								id: 'type',
								label: _("Choose a type:"),
								'values': [
									{text: _("Text"), value: 'type1'},
									{text: _("Definition"), value: 'type2'},
									{text: _("Page"), value: 'type3'}
								],
								onselect : function(){
									
									var val = this.value(); // type1, type2 or type3
									
									// Update the text below the SELECT
									var no = (parseFloat(val.replace("type",""))-1);
									var descriptions = [
										_("Plain text. You can add a title."),
										_("Write the term and its definition. You may use HTML and edit it in the editor."),
										_("Show the content of the first Free Text iDevice in the specified page.")
									];
									document.getElementById("type-desc").innerHTML = descriptions[no];
									
									// Show the block options and hide the others
									document.getElementById("type1-options").style.display = "none";
									document.getElementById("type2-options").style.display = "none";
									document.getElementById("type3-options").style.display = "none";
									var currentBlock = document.getElementById(val+"-options");
									currentBlock.style.display = "block";
									// "Reflow"
									currentBlock.style.top = TooltipDialog.globals.instructionsBlockTopPosition;
									
								}
							},
							{
								type: 'label',
								id: 'type-desc',
								style: 'line-height:30px;font-weight:bold',
								text: _("Plain text. You can add a title.")
							},
							{
								name: 'href',
								id: 'href',
								type: 'textbox',
								label: _("Link URL"),
								onchange: function(){
									if (this.value().indexOf("exe-node:")!=-0) {
										win.find('#node')[0].value("");
									}
								}
							},
							{
								name: 'node',
								id: 'node',
								type: 'listbox',
								label: _("Pages"),
								'values': TooltipDialog.getNodesList(),
								onselect : function(){
									win.find('#href')[0].value(this.value());
								}
							},
							{
								name: 'linkTitle',
								id: 'linkTitle',
								type: 'textbox',
								label: _("Link title"),
							},
							{
								name: 'tooltipTitle',
								id: 'tooltipTitle',
								type: 'textbox',
								label: _("Tooltip title"),
							},
							// Type 1
							{
								type: 'container',
								id: 'type1-options',
								layout: 'flex',
								direction: 'row',
								align: 'center',
								spacing: 15,
								items: [
									{
										type: 'label',
										style: 'line-height:30px;font-weight:bold',
										text: _("The tooltip will show the Link title.")
									}
								]						
							},
							// Type 2
							{
								type: 'container',
								id: 'type2-options',
								layout: 'flex',
								direction: 'row',
								align: 'center',
								spacing: 15,
								items: [
									{
										type: 'label',
										style: 'line-height:30px;font-weight:bold',
										text: _("The tooltip will show the term and its definition.")
									}
								]						
							},
							// Type 3
							{
								type: 'container',
								id: 'type3-options',
								layout: 'flex',
								direction: 'row',
								align: 'center',
								spacing: 15,
								items: [
									{
										type: 'label',
										style: 'line-height:30px;font-weight:bold',
										text: _("Instructions:")
									}
								]						
							}							
						]
					},

					{
						title: _('Behaviour'),
						type: 'form',
						pack: 'start',
						items: []
					},
					
					{
						title: _('Appearance'),
						type: 'form',
						pack: 'start',
						items: []
					}					
				],
				onSubmit: TooltipDialog.insert
			});
			
			TooltipDialog.getValues();
			
		}, // openToolTipDialog
		
		activateButton : function(node) {
			
			
		}
		
	} // TooltipDialog
	
	editor.addButton('tooltips', {
		image: url + '/img/tooltip.png',
		tooltip: _('Tooltip'),
		onclick: TooltipDialog.openToolTipDialog,
		onPostRender: function() {
			var ctrl = this;
			editor.on('NodeChange', function(e) {
				ctrl.active(TooltipDialog.activateButton(e.element));
			});
		}		
	});
	
	editor.addMenuItem('tooltips', {
		// icon: 'image',
		text: _('Tooltip'),
		onclick: TooltipDialog.openToolTipDialog,
		context: 'insert'
	});
	
	editor.on('init', function(e) {
		editor.dom.loadCSS(url + "/css/content.css");
	});
	
});