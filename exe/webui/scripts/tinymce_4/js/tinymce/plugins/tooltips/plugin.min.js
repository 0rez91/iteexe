/**
 * plugin.min.js
 *
 * Released under Attribution-ShareAlike 4.0 International License.
 * Author: Ignacio Gros (http://gros.es/) for http://exelearning.net/
 *
 * License: http://creativecommons.org/licenses/by-sa/4.0/
 */

/**
 * Create/edit simple, inline HTML and AJAX tooltips
 * To be used with http://qtip2.com/, licensed MIT, GPL (files in exe/webui/scripts/exe_tooltips)
 */
tinymce.PluginManager.add('tooltips', function(editor, url) {
	
	TooltipDialog = {
		
		globals : {
			instructionsBlockTopPosition : 0
		},
		
		// Load the previous values (if needed)
		getValues : function(){
			
			var block1 = document.getElementById("type1-options");
			var block2 = document.getElementById("type2-options");
			var block3 = document.getElementById("type3-options");
						
			TooltipDialog.globals.instructionsBlockTopPosition = block1.style.top;
			block2.style.display = "none";
			block3.style.display = "none";
			
			// Set type 3 instructions:
			var instructions = '\
				<p style="margin-top:5px"><strong style="font-weight:bold">'+_("Instructions:")+'</strong></p>\
				<ul>\
					<li style="margin:10px 0">1. '+_("Create a Page with a Free Text iDevice.")+'</li>\
					<li style="margin:10px 0">3. '+ _("Define the Link: Select that page.")+'</li>\
					<li style="margin:10px 0">4. '+_('The tooltip will show the content of the Free Text iDevice.')+'</li>\
				</ul>\
			';
			jQuery("#type3-instructions").html(instructions);
			
			// Set Appearance preview
			TooltipDialog.setPreview();
			
		},
		
		setPreview : function(){
			var rounded = win.find('#rounded')[0].checked();
			var shadow = win.find('#shadow')[0].checked();
			var img = 'appearance1';
			if (rounded && shadow) img = 'appearance4';
			else if (rounded) img = 'appearance2';
			else if (shadow) img = 'appearance3';
			jQuery("#preview").html('<img src="'+editor.settings.path_to_folder+'plugins/tooltips/img/'+img+'.png" width="340" height="55" alt="" />');			
		},
		
		// Create or update the content
		insert : function(content){
			
			alert("Insert")
			
			// Close the editor
			editor.windowManager.close();			
			
		},
		
		showTypeOptions : function(val){
			// Update the text below the SELECT
			var no = (parseFloat(val.replace("type",""))-1);
			var descriptions = [
				_("Plain text. You can add a title."),
				_("Write the term and its definition. You may use HTML and edit it in the editor."),
				_("Show the content of the first Free Text iDevice in the specified page.")
			];
			document.getElementById("type-desc").innerHTML = descriptions[no];
			
			// Show the block options and hide the others
			document.getElementById("type1-options").style.display = "none";
			document.getElementById("type2-options").style.display = "none";
			document.getElementById("type3-options").style.display = "none";
			var currentBlock = document.getElementById(val+"-options");
			currentBlock.style.display = "block";
			// "Reflow"
			currentBlock.style.top = TooltipDialog.globals.instructionsBlockTopPosition;
			
			// Update #tooltipTitle's label text:
			var label = _("Tooltip title");
			if (val == "type2") label = _("Term");
			document.getElementById("tooltipTitle-l").innerHTML = label;

			// URL and Pages
			var refField = jQuery("#href");
			var refLabel = jQuery("#href-l");
			var nodeField = jQuery("#node");
			var nodeLabel = jQuery("#node-l");	
			if (val=="type2") {
				if (refField.val()=="") refField.val("#");
				refField.prop("disabled","disabled").css("opacity",0.2);
				refLabel.css("opacity",0.2);
				nodeField.prop("disabled","disabled").css("opacity",0.2);
				nodeLabel.css("opacity",0.2);
			} else {
				if (refField.value=="#") refField.value = "";
				refField.prop("disabled",false).css("opacity",1);
				refLabel.css("opacity",1);	
				nodeField.prop("disabled",false).css("opacity",1);
				nodeLabel.css("opacity",1);					
				refField.show();
				refLabel.show();
				nodeField.show();
				nodeLabel.show();				
			}
			
		},
		
		getNodesList : function(){
			var i;
			var arrayName = "tinymce_anchors";
			var w = window;
			var html = "";
			var options = [];
			options.push({text: _("---"), value: ''})
			if (w) {
				if (typeof w[arrayName]=="object") {
					var myArray = w[arrayName];
					for (i=0;i<myArray.length;i++){
						var n = myArray[i].replace("exe-node:","");
						var checkN = n.split("#");
						if (checkN[1]=="auto_top") n = n.replace("#auto_top","");
						n = decodeURIComponent(n);
						var newOption = '<option value="' + myArray[i] + '">' + n + '</option>\n';
						if (html.indexOf(newOption)==-1) {
							html += newOption;
							options.push({text: n, value: myArray[i]})
						}
					}
				}
			}
			return options;
		},
		
		openToolTipDialog : function(){
			
			// Advanced dialog shows general+advanced tabs
			win = editor.windowManager.open({
				title: _('Tooltip'),
				bodyType: 'tabpanel',
				body: [
					{
						title: _('General'),
						type: 'form',
						items: [
							{
								type: 'listbox',
								minWidth: 150,
								name: 'type',
								id: 'type',
								label: _("Choose a type:"),
								'values': [
									{text: _("Text"), value: 'type1'},
									{text: _("Definition"), value: 'type2'},
									{text: _("Page"), value: 'type3'}
								],
								onselect : function(){
									TooltipDialog.showTypeOptions(this.value()); // type1, type2 or type3
								}
							},
							{
								type: 'label',
								id: 'type-desc',
								visible: false,
								style: 'line-height:30px;font-weight:bold',
								text: _("Plain text. You can add a title.")
							},
							{
								name: 'href',
								id: 'href',
								type: 'textbox',
								label: _("Link URL"),
								onchange: function(){
									if (this.value().indexOf("exe-node:")!=-0) {
										win.find('#node')[0].value("");
									}
								}
							},
							{
								name: 'node',
								id: 'node',
								type: 'listbox',
								label: _("Pages"),
								'values': TooltipDialog.getNodesList(),
								onselect : function(){
									win.find('#href')[0].value(this.value());
								}
							},
							{
								name: 'linkTitle',
								id: 'linkTitle',
								type: 'textbox',
								label: _("Link title"),
							},
							{
								name: 'tooltipTitle',
								id: 'tooltipTitle',
								type: 'textbox',
								label: _("Tooltip title"),
							},
							// Type 1
							{
								type: 'container',
								id: 'type1-options',
								layout: 'flex',
								direction: 'row',
								align: 'center',
								spacing: 15,
								items: [
									{
										type: 'label',
										style: 'line-height:30px;font-weight:bold',
										text: _("The tooltip will show the Link title.")
									}
								]						
							},
							// Type 2
							{
								type: 'container',
								id: 'type2-options',
								layout: 'flex',
								direction: 'column',
								spacing: 15,
								items: [
									{
										type: 'label',
										style: 'line-height:30px;font-weight:bold',
										text: _("The tooltip will show the term and its definition.")
									},
									{
										type: 'label',
										visible: false,
										text: _("Definition:"),
										forId: 'longtext'
									},
									{
										id: 'longtext',
										type: 'textbox',
										name: 'longtext',
										minHeight: 60,
										placeholder: _("Definition"),
										minWidth: 500,
										multiline: true
									}
								]						
							},
							// Type 3
							{
								type: 'container',
								id: 'type3-options',
								layout: 'flex',
								direction: 'row',
								align: 'center',
								spacing: 15,
								items: [
									{
										type: 'label',
										id: 'type3-instructions',
										style: 'line-height:30px',
										minHeight: 100,
										minWidth: 500,
										text: _("Instructions:")
									}
								]						
							}							
						]
					},

					{
						title: _('Behaviour'),
						type: 'form',
						pack: 'start',
						items: [
							{
								type: 'label',
								text: _("Close behaviour:"),
								forId: 'close_behaviour'
							},						
							{
								type: 'listbox',
								minWidth: 150,
								name: 'close_behaviour',
								id: 'close_behaviour',
								'values': [
									{text: _("Automatically close the tooltip when moving the mouse out of the link"), value: ''},
									{text: _("Close button: It will close the tooltip when clicked"), value: ' with-button'}
								]
							},
							{
								type: 'label',
								text: _("Link behaviour:"),
								forId: 'target'
							},						
							{
								type: 'listbox',
								minWidth: 150,
								name: 'target',
								id: 'target',
								'values': [
									{text: _("Open in the same window"), value: ''},
									{text: _("Open in a new window"), value: '_blank'}
								]
							}							
						]
					},
					
					{
						title: _('Appearance'),
						type: 'form',
						pack: 'start',
						items: [
							{
								type: 'listbox',
								minWidth: 150,
								name: 'color',
								id: 'color',
								label: _("Change the styling:"),
								'values': [
									{text: _("Yellow"), value: 'color1'},
									{text: _("Light"), value: 'color2'},
									{text: _("Dark"), value: 'color3'},
									{text: _("Red"), value: 'color4'},
									{text: _("Blue"), value: 'color5'},
									{text: _("Green"), value: 'color6'}
								]
							},
							{
								type: 'label',
								id: 'preview',
								text: "",
								minHeight: 55,
								minWidth: 340
							},
							{
								type: 'container',
								layout: 'flex',
								direction: 'row',
								align: 'center',
								spacing: 15,
								items: [
									{
										name: 'rounded', 
										id: 'rounded',
										type: 'checkbox', 
										text: _('Rounded'),
										onchange: function(){
											TooltipDialog.setPreview();
										}								
									},
									{
										name: 'shadow', 
										id: 'shadow',
										type: 'checkbox', 
										text: _('Shadow'),
										onchange: function(){
											TooltipDialog.setPreview();
										}								
									}
								]						
							}							
						]
					}					
				],
				onSubmit: TooltipDialog.insert
			});
			
			TooltipDialog.getValues();
			
		}, // openToolTipDialog
		
		activateButton : function(node) {
			
			
		}
		
	} // TooltipDialog
	
	editor.addButton('tooltips', {
		image: url + '/img/tooltip.png',
		tooltip: _('Tooltip'),
		onclick: TooltipDialog.openToolTipDialog,
		onPostRender: function() {
			var ctrl = this;
			editor.on('NodeChange', function(e) {
				ctrl.active(TooltipDialog.activateButton(e.element));
			});
		}		
	});
	
	editor.addMenuItem('tooltips', {
		// icon: 'image',
		text: _('Tooltip'),
		onclick: TooltipDialog.openToolTipDialog,
		context: 'insert'
	});
	
	editor.on('init', function(e) {
		editor.dom.loadCSS(url + "/css/content.css");
	});
	
});