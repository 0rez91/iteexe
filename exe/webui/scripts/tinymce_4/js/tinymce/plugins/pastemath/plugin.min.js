/**
 * plugin.min.js
 *
 * Released under Attribution-ShareAlike 4.0 International License.
 * Author: Ignacio Gros (http://gros.es/) for http://exelearning.net/
 *
 * License: http://creativecommons.org/licenses/by-sa/4.0/
 */

/**
 * Paste mathematical markup
 * Don't forget to add some styles to theme/site so the code has the same appearance everywhere (see eXe's base.css file)
 * Mathjax options to be used with https://www.mathjax.org/ (JavaScript display engine for mathematics)
 */
tinymce.PluginManager.add('pastemath', function(editor, url) {
	
	PasteMathDialog = {
		
		// Load the previous values (if needed)
		getValues : function(){
			
			
		},
		
		getMathBlockClass : function(withImage){
			var type = win.find("#use").value();
			var k = "exe-math show-"+type;
			if (withImage==false) k = "exe-math code-only";
			if (type == "code" && win.find("#mathjax").checked()) {
				k += " exe-math-engine";
			}
			var position = "position-center";
			if (this.isMathBlock) {
				// Respect the alignment
				var klass = jQuery(this.mathBlock).attr("class");
				if (klass.indexOf(" position-left")!=-1) position = "position-left";
				else if (klass.indexOf(" position-right")!=-1) position = "position-right";
				else if (klass.indexOf(" float-left")!=-1) position = "float-left";
				else if (klass.indexOf(" float-right")!=-1) position = "float-right";
			}
			k += " "+position;
			return k;
		},
		
		insertMathAndImage : function(src,img,alt){
			alt = alt.replace(/"/g, "&quot;");
			var content = "<div class='"+this.getMathBlockClass()+"'>";
			if (this.isMathBlock) {
				jQuery(this.mathBlock).remove();
				// The image existed and it has not changed
				if (img=="" && typeof(this.originalImage)!="undefined") content += "<p class='exe-math-img'>"+this.originalImage.replace("$PasteMathDialogAlt",alt)+"</p>";
				// The imagen has changed
				else content += "<p class='exe-math-img'><img alt='"+alt+"' src='"+src+"' width='"+img.width+"' height='"+img.height+"' /></p>";
			} else {
				content += "<p class='exe-math-img'><img alt='"+alt+"' src='"+src+"' width='"+img.width+"' height='"+img.height+"' /></p>";
			}
			content += "<p class='exe-math-code'>"+this.mathCode+"</p>";
			content += "</div>";		
			if (!this.isMathBlock) content += "<br />";		
			editor.execCommand('mceInsertContent', false, content);
			editor.windowManager.close();
		},		
		
		updateImageData : function(e){
			var src = e.src;
			if (src.indexOf("/")!=0) {
				// Remove domain, etc.
				var loc = window.location;
				src = src.replace("http://","");
				src = src.replace("https://","");
				src = src.replace(loc.hostname+":"+loc.port,"");
				src = src.replace(loc.hostname,"");
			}
			var img = document.getElementById('PasteMathDialogPreviewImage');		
			if (img) {	
				// Insert the new code
				PasteMathDialog.insertMathAndImage(src,img,win.fine('#imgAlt').value());
			}	
		},
		
		updateImage : function(src) {
			var elm = document.getElementById('PasteMathDialogPreview');
			if (src!="") {
				elm.innerHTML = '<img id="PasteMathDialogPreviewImage" src="' + src + '" onload="PasteMathDialog.updateImageData(this);" />'
			} else {
				elm.innerHTML = "";
			}
		},		

		createMathImage : function(field_name, math_code, font_size) {
			
			// Update the image only if the code has changed:
			
			if (this.isMathBlock && this.htmlSource==math_code && typeof(this.originalImage)!='undefined') {
				// Insert the new code
				PasteMathDialog.insertMathAndImage(src,"",win.find('#imgAlt').value()); // The image has not changed (img == "")
				return false;
			}
			
			var win = window;
			
			var w = "";
			if (typeof(parent.nevow_clientToServerEvent)!='undefined') {
				w = parent;
			} else {
				editor.windowManager.alert(_('Error (missing function):') + 'nevow_clientToServerEvent');
				PasteMathDialog.preloader.hide();
				return;
			}

			var local_imagePath = ""

			if (math_code == "") {
				PasteMathDialog.preloader.hide();
				return;
			}

			if (typeof(w.curr_edits_math_num)=='undefined') w.curr_edits_math_num = 0;			

			// to help unique-ify each previewed math image:
			var preview_basename = "eXe_LaTeX_math_"+w.curr_edits_math_num
			var preview_math_imagefile = preview_basename+".gif"
			// Simplify the subsequent file-lookup process,  by just appending 
			// the ".tex" to the full image name, as such:
			var preview_math_srcfile = preview_math_imagefile+".tex"

			w.curr_edits_math_num += 1

			// netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
			// pass the file information on to the server,
			// to generate the image into the server's "previews" directory:

			var method = 'generateTinyMCEmath';
			if (math_code.indexOf("<math")!=-1) method = 'generateTinyMCEmathML';
			
			try {
				
				w.nevow_clientToServerEvent(
					method, 
					this, 
					'', 
					win, 
					win.name, 
					field_name, 
					math_code, 
					4, 
					preview_math_imagefile, 
					preview_math_srcfile
				);	

				// once the image has been generated, it SHOULD be sitting here:
				var full_preview_url = "/previews/"+preview_math_imagefile;

				win.focus();

				// clear out any old value in the tinyMCE image filename field:
				var srcField = win.find("#"+field_name).value(''); 
				// PreviewImage is only available for images:
				this.updateImage(" ");
				// the above two commands are the only way to really 
				// ensure that we can trigger the onchange event below:

				// set the tinyMCE image filename field:
				var srcField = win.find("#"+field_name).value(full_preview_url); 
				// then force its onchange event:
				// PreviewImage is only available for images:
				this.updateImage(full_preview_url);
			
			} catch(e) {
				
				editor.windowManager.confirm(
					_('The image could not be created. Insert the code without alternative image?'),
					function(s){
						if (s) {
							
							// Insert code without image
							PasteMathDialog.insertMath(math_code);
							
						} else {
							
							PasteMathDialog.preloader.hide();
							
						}
					}
				);				
				
			}

		},		
		
		insertMath : function(code) {
			if (this.isMathBlock) {
				jQuery(this.mathBlock).remove();
			}
			var content = "<div class='"+this.getMathBlockClass(false)+"'>";
				content += "<p class='exe-math-code'>"+this.mathCode+"</p>";
			content += "</div>";		
			if (!this.isMathBlock) content += "<br />";		
			editor.execCommand('mceInsertContent', false, content);
			editor.windowManager.close();
		},		
		
		// Create or update the content
		insert : function(content){
			
			var content = win.find("#mathCode").value();
			
			if (content=="") {
				editor.windowManager.alert(_('Please write the code'));
				return false;
			}
			
			this.mathCode = content;
			var type = win.find("#use").value();
			this.preloader.show();

			if (type=="code" && !win.find("#includeImage").checked()) {
				
				// Insert code without image
				this.insertMath(content);
				return false;
				
			} else {
				
				// Create the image, but ask for confirmation if it has no alternative text
				var alt = win.find('#imgAlt').value();
				if (alt=="") {
					editor.windowManager.confirm(
						_('Continue without a title? Some users might see an image instead of the rendered code. Without the title the image may not be accessible to them.'),
						function(s){
							if (s) {
								
								PasteMathDialog.createMathImage("src",content);
								
							} else {
								
								PasteMathDialog.preloader.hide();
								
							}
						}
					);					
				} else {
					PasteMathDialog.createMathImage("src",content);
				}		
				
			}			
			
		},
		
		preloader : {
			show : function(){
				var panelA = jQuery("#PasteMathDialogA");
				jQuery("div",panelA).each(function(i){
					if (i==0) this.style.background = "#FFF url("+PasteMathDialog.baseURL+"/img/loading.gif) no-repeat 50% 50%";
					else jQuery(this).hide();
				});
				jQuery("label",panelA).hide();
				jQuery("textarea",panelA).hide();
			},
			hide : function(){
				var panelA = jQuery("#PasteMathDialogA");
				jQuery("div",panelA).each(function(i){
					if (i==0) this.style.background = "";
					else jQuery(this).show();
				});
				jQuery("label",panelA).show();
				jQuery("textarea",panelA).show();				
			}
		},		
		
		// Disable/Enable the image options
		toggleType : function(val) {
			
			var fields = jQuery("#mathjax,#includeImage");
			var labels = jQuery("#mathjax-l,#includeImage-l");	
			var imgField = jQuery("#imgAlt");
			var imgLabel = jQuery("#imgAlt-l");
			
			imgField.prop("disabled",false).css("opacity",1);
			imgLabel.css("opacity",1)			
			
			if (val=="image") {
				fields.prop("disabled","disabled").css("opacity",0.2);
				labels.css("opacity",0.2);
			} else {
				fields.prop("disabled",false).css("opacity",1);
				labels.css("opacity",1);
				if (!win.find("#includeImage").checked()) {
					imgField.prop("disabled","disabled").css("opacity",0.2);
					imgLabel.css("opacity",0.2);
				}
			}
			
		},
		
		// Disable/Enable the alternative text field
		toggleAlt : function(checked) {
			var field = jQuery("#imgAlt");
			var label = jQuery("#imgAlt-l");
			
			if (!checked) {
				field.prop("disabled","disabled").css("opacity",0.2);
				label.css("opacity",0.2);
			} else {
				field.prop("disabled",false).css("opacity",1);
				label.css("opacity",1);
			}			
		},
		
		openDialog : function(){
			
			// Open the window and load the previous values
			win = editor.windowManager.open({
				title: _('Paste mathematical markup'),
				bodyType: 'tabpanel',
				body: [
					{
						title: _('General'),
						id: 'PasteMathDialogA',
						type: 'form',
						pack: 'start',
						items: [
									
							{
								type: 'listbox',
								minWidth: 150,
								name: 'use',
								label: _('Choose what to use:'),
								'values': [
									{text: _('Code')+' ('+_('recommended')+')', value: 'code'},
									{text: _('Image'), value: 'image'}
								],
								onselect : function(){
									PasteMathDialog.toggleType(this.value());
								}
							},
							{
								id: 'mathjax', 
								name: 'mathjax', 
								type: 'checkbox', 
								checked: true, 
								text: _('Use MathJax from mathjax.org (online only) or your own copy')
							},
							{
								id: 'includeImage', 
								name: 'includeImage', 
								type: 'checkbox', 
								checked: true, 
								text: _('Include alternative image (recommended)'),
								onchange : function(){
									PasteMathDialog.toggleAlt(this.checked());
								}
							},
							{
								type: 'textbox',
								id: 'imgAlt',
								name: 'imgAlt',
								label: _('Image title (alternative text):')
							},
							{
								type: 'textbox',
								name: 'src',
								visible: false
							},
							{
								type: 'label',
								text: _('Paste (CTRL+V) the code (LaTeX...) from your favorite editor or use eXeMathEditor'),
								forId: 'htmlSource'
							},					
							{
								type: 'textbox',
								name: 'mathCode',
								multiline: true,
								minHeight: 100
							}
							
						]
					},					
					
					{
						title: _('Help'),
						id: 'PasteMathDialogB',
						type: 'form',
						pack: 'start',
						items: [
							{
								type   : 'container',
								html   : '\
									<ul style="margin-left:2em">\
										<li style="margin-bottom:.5em">'+_("Paste your code (LaTeX...).")+'</li>\
										<li style="margin-bottom:.5em">'+_("Choose if you want to show the code or an image.")+'</li>\
										<li style="margin-bottom:.5em">'+_("If you show the code (recommended):")+'\
											<ul style="margin:.5em 1em">\
												<li style="margin-bottom:.5em">'+_("You can use MathJax to display the mathematical properly in web browsers (that will work online only).")+'</li>\
												<li style="margin-bottom:.5em">'+_("You can include an alternative image. In that case you'll have to provide a descriptive text for it.")+'</li>\
												<li>'+_("With no image and no MathJax some users might not be able to see the formula.")+'</li>\
											</ul>\
										</li>\
										<li style="margin-bottom:.5em">'+_("If you prefer to show the image, the code will be there, but it won't be visible.")+'</li>\
										<li style="margin-bottom:.5em">'+_("If JavaScript is enabled links to the code and the image will be automatically created.")+'</li>\
										<li style="margin-bottom:.5em">'+_("If JavaScript is disabled, both (code and image) will be visible.")+'</li>\
									</ul>\
									<p style="margin:1em 0;font-weight:bold">'+_("Remember that...")+'</p>\
									<ul style="margin-left:2em">\
										<li style="margin-bottom:.5em">'+_("You can use your favorite formula editor or use the one included in eXe (eXeMathEditor).")+'</li>\
										<li>'+_('You can replace the generated image with another one using the "Insert/Edit Image" option.')+'</li>\
									</ul>\
									<div id="PasteMathDialogPreview" style="display:none"></div>\
								'
							}						
						]
					}
					
				],
				onsubmit: function(e) {
					// Insert content when the window form is submitted
					PasteMathDialog.insert(e.data.htmlSource);
					return false;
				}
			});
			PasteMathDialog.getValues();
			
		}, // openDialog
		
		activateButton : function(node) {
			
			
			
		}
		
	} // PasteMathDialog	
	
	editor.addButton('pastemath', {
		image: url + '/img/pastemath.png',
		tooltip: _('Paste mathematical markup'),
		onclick: PasteMathDialog.openDialog,
		onPostRender: function() {
			var ctrl = this;
			editor.on('NodeChange', function(e) {
				ctrl.active(PasteMathDialog.activateButton(e.element));
			});
		}		
	});
	
	editor.addMenuItem('pastemath', {
		// icon: 'image',
		text: _('Paste mathematical markup'),
		onclick: PasteMathDialog.openDialog,
		context: 'insert'
	});
	
	editor.on('init', function(e) {
		editor.dom.loadCSS(url + "/css/content.css");
		PasteMathDialog.baseURL = url;
	});
	
});