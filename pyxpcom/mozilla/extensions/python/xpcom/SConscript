import os

# Choose a python version
PYTHON_VER = '2.4'

# Where header files are found
CPPPATH = [
    '/usr/include',
    '/usr/include/firefox',
    '/usr/include/firefox/string',
    '/usr/include/firefox/xpcom',
    '/usr/include/firefox/nspr',
    '/usr/include/python%s' % PYTHON_VER,
    '/usr/lib/python%s/config' % PYTHON_VER,
    ]

# What's already defined
CPPDEFINES = [
    #'IS_COMPONENT',
    'MOZILLA_INTERNAL_API',
    'FORCE_SHARED_LIB',
    'FORCE_USE_PIC',
    'NDEBUG',
    'TRIMMED',
    'MOZILLA_CLIENT',
    #('OSTYPE', r'\"Linux2.6\"'),
    #('OSARCH', r'\"Linux\"'),
    #('BUILD_ID', r'\"0000000000\"'),
    ('PYTHON_SO', r'\"libpython%s.so\"' % PYTHON_VER), # TODO: This is platform dependant
    '_MOZILLA_CONFIG_H_',
    ('ACCESSIBILITY', '1'),
    ('D_INO', 'd_ino'),
    ('FUNCPROTO', '15'),
    ('HAVE_DIRENT_H', '1'),
    ('HAVE_FCHMOD', '1'),
    ('HAVE_FLOCKFILE', '1'),
    ('HAVE_GETOPT_H', '1'),
    ('HAVE_GNU_GET_LIBC_VERSION', '1'),
    ('HAVE_GNU_LIBC_VERSION_H', '1'),
    ('HAVE_I18N_LC_MESSAGES', '1'),
    ('HAVE_INT16_T', '1'),
    ('HAVE_INT32_T', '1'),
    ('HAVE_INT64_T', '1'),
    ('HAVE_INTTYPES_H', '1'),
    ('HAVE_LANGINFO_CODESET', '1'),
    ('HAVE_LCHOWN', '1'),
    ('HAVE_LIBDL', '1'),
    ('HAVE_LIBM', '1'),
    ('HAVE_LOCALTIME_R', '1'),
    ('HAVE_LSTAT64', '1'),
    ('HAVE_MALLOC_H', '1'),
    ('HAVE_MEMMOVE', '1'),
    ('HAVE_MEMORY_H', '1'),
    ('HAVE_NL_TYPES_H', '1'),
    ('HAVE_RANDOM', '1'),
    ('HAVE_RES_NINIT', '1'),
    ('HAVE_RINT', '1'),
    ('HAVE_SIGINFO_T', '1'),
    ('HAVE_SNPRINTF', '1'),
    ('HAVE_STAT64', '1'),
    ('HAVE_STDINT_H', '1'),
    ('HAVE_STRERROR', '1'),
    ('HAVE_STRTOK_R', '1'),
    ('HAVE_ST_BLKSIZE', '1'),
    ('HAVE_SYS_BITYPES_H', '1'),
    ('HAVE_SYS_CDEFS_H', '1'),
    ('HAVE_SYS_STATFS_H', '1'),
    ('HAVE_SYS_STATVFS_H', '1'),
    ('HAVE_UINT', '1'),
    ('HAVE_UINT64_T', '1'),
    ('HAVE_UNAME_DOMAINNAME_FIELD', '1'),
    ('HAVE_UNISTD_H', '1'),
    ('HAVE_VA_COPY', '1'),
    ('HAVE_VISIBILITY_ATTRIBUTE', '1'),
    ('HAVE_VISIBILITY_HIDDEN_ATTRIBUTE', '1'),
    ('HAVE_X11_XKBLIB_H', '1'),
    ('HAVE_XSHM', '1'),
    ('HAVE___CXA_DEMANGLE', '1'),
    ('IBMBIDI', '1'),
    ('JS_THREADSAFE', '1'),
    ('MOZILLA_1_8_BRANCH', '1'),
    ('MOZILLA_LOCALE_VERSION', '"1.8.1"'),
    ('MOZILLA_REGION_VERSION', '"1.8.1"'),
    ('MOZILLA_SKIN_VERSION', '"1.8"'),
    ('MOZILLA_VERSION', '"1.8.1.1"'),
    ('MOZILLA_VERSION_U', '1.8.1.1'),
    ('MOZ_ACCESSIBILITY_ATK', '1'),
    ('MOZ_BUILD_APP', 'browser'),
    ('MOZ_DEFAULT_TOOLKIT', '"gtk2"'),
    ('MOZ_DISTRIBUTION_ID', '"org.mozilla"'),
    ('MOZ_DLL_SUFFIX', '".so"'),
    ('MOZ_ENABLE_CANVAS', '1'),
    ('MOZ_ENABLE_OLD_ABI_COMPAT_WRAPPERS', '1'),
    ('MOZ_ENABLE_XFT', '1'),
    ('MOZ_ENABLE_XREMOTE', '1'),
    ('MOZ_FEEDS', '1'),
    ('MOZ_JSLOADER', '1'),
    ('MOZ_LOGGING', '1'),
    ('MOZ_MATHML', '1'),
    ('MOZ_MORK', '1'),
    ('MOZ_PHOENIX', '1'),
    ('MOZ_PROFILELOCKING', '1'),
    ('MOZ_SAFE_BROWSING', '1'),
    ('MOZ_STORAGE', '1'),
    ('MOZ_UPDATE_CHANNEL', 'default'),
    ('MOZ_URL_CLASSIFIER', '1'),
    ('MOZ_USER_DIR', '".mozilla"'),
    ('MOZ_VIEW_SOURCE', '1'),
    ('MOZ_WIDGET_GTK2', '1'),
    ('MOZ_X11', '1'),
    ('MOZ_XPINSTALL', '1'),
    ('MOZ_XTF', '1'),
    ('MOZ_XUL', '1'),
    ('MOZ_XUL_APP', '1'),
    ('NS_PRINTING', '1'),
    ('NS_PRINT_PREVIEW', '1'),
    ('OJI', '1'),
    ('STDC_HEADERS', '1'),
    ('UNIX_ASYNC_DNS', '1'),
    ('VA_COPY', 'va_copy'),
    ('XP_UNIX', '1'),
    ('_REENTRANT', '1'),
    ]


# C++ Flags
CXXFLAGS = [
    '-fno-rtti', '-fno-exceptions', '-Wall', '-Wconversion', '-Wpointer-arith', '-Wcast-align',
    '-Woverloaded-virtual', '-Wsynth', '-Wno-ctor-dtor-privacy', '-Wno-non-virtual-dtor', '-Wno-long-long',
    '-pedantic', '-fshort-wchar', '-pthread', '-pipe', '-DNDEBUG',
    '-DTRIMMED', '-O2', '-fPIC',
    ]

CXXFLAGS = [
    '-fPIC',
    '-fno-rtti',
    '-fno-exceptions',
    '-Wall',
    '-Wconversion',
    '-Wpointer-arith',
    '-Wcast-align',
    '-Woverloaded-virtual',
    '-Wsynth',
    '-Wno-ctor-dtor-privacy',
    '-Wno-non-virtual-dtor',
    '-Wno-long-long',
    '-pedantic',
    '-fshort-wchar',
    '-pthread',
    '-pipe',
    '-O',
    #'-Wp,-MD,.deps/ErrorUtils.pp',  # Overrides dependencies, but I don't know how they generate the .pp file
    ]

LINKFLAGS = ['-z', 'defs', ]

# Where libraries can be found
LIBPATH = [
    '/usr/lib',
    '/usr/lib/firefox',
    '/usr/lib/python%s' % PYTHON_VER,
    ]

# How to compile .pyc and .pyo files
pycBuilder = Builder(action = '/usr/bin/python%s -c "import py_compile; py_compile.compile(\'$SOURCE\')"' % PYTHON_VER, suffix = '.pyc', src_suffix = '.py')
pyoBuilder = Builder(action = '/usr/bin/python%s -O -c "import py_compile; py_compile.compile(\'$SOURCE\')"' % PYTHON_VER, suffix = '.pyo', src_suffix = '.py')
BUILDERS = {'Pyc': pycBuilder, 'Pyo': pyoBuilder}

# This is our build envrionment
Import('env')
env.Append(CPPPATH=CPPPATH)
env.Append(CPPDEFINES=CPPDEFINES)
env.Append(CXXFLAGS=CXXFLAGS)
env.Append(LINKFLAGS=LINKFLAGS)
env.Append(LIBPATH=LIBPATH)
env.Append(BUILDERS=BUILDERS)

# Check all the stuff we need is around
conf = Configure(env)
# Find Python deps
if not conf.CheckHeader('Python.h'):
    print 'Please install python include files'
    Exit(1)
if not conf.CheckLib('python'+PYTHON_VER):
    print 'Please install python lib'
    Exit(1)
# Find mozilla deps
if not conf.CheckCXXHeader('xpcom-config.h'):
    print 'Need mozilla xpcom headers'
    Exit(1)
#if not conf.CheckLib('xpcom'):
    #print 'Need mozilla xpcom library'
    #Exit(1)
env = conf.Finish()

# Build the python stuff

pys = [
	'__init__.py',
	'components.py',
	'file.py',
	'nsError.py',
	'register.py',
	'xpcom_consts.py',
	'xpt.py',
	]
pycs = map(env.Pyc, pys)
pyos = map(env.Pyo, pys)
allPyFiles = pys + pycs + pyos
#
# Do an install if necessary
# Find the installation place

env.Import('installDir')
dist = env.Install('#dist/xpcom', allPyFiles)
install = env.Install(os.path.join(installDir, 'xpcom'), allPyFiles)
Export('env dist install PYTHON_VER')

# Build the other python libs
SConscript('client/SConscript')
SConscript('server/SConscript')
SConscript('tools/SConscript')

# Build the .so/.pyd and the loader component
SConscript('src/SConscript')

# Build the test component
SConscript('test/SConscript')

Return('dist install')
