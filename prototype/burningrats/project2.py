#!/usr/bin/env python
# -*- coding: UTF8 -*-

# Python module project2.py
# Autogenerated from project2.glade
# Generated on Sun May 22 00:55:32 2005

# Warning: Do not delete or modify comments related to context
# They are required to keep user's code

import os
import gtk
from SimpleGladeApp import SimpleGladeApp

glade_dir = ""

# Put your modules and data here
import gtkmozembed

# From here through main() codegen inserts/updates a class for
# every top-level widget in the .glade file.

class Window1(SimpleGladeApp):
        def __init__(self, path="project2.glade", root="window1", domain=None, **kwargs):
                path = os.path.join(glade_dir, path)
                SimpleGladeApp.__init__(self, path, root, domain, **kwargs)
                self.browser.load_url('http://www.google.co.nz')

        def new(self):
                #context Window1.new {
                pass
                #context Window1.new }

        #context Window1 custom methods {
        def on_browser_location(self, widget):
                self.entry1.set_text( self.browser.get_location() )
        #context Window1 custom methods }

        def on_back(self, widget, *args):
                #context Window1.on_back {
                self.browser.go_back()
                #context Window1.on_back }

        def on_reload(self, widget, *args):
                #context Window1.on_reload {
                self.browser.reload(gtkmozembed.FLAG_RELOADNORMAL)
                #context Window1.on_reload }

        def on_forward(self, widget, *args):
                #context Window1.on_forward {
                self.browser.go_forward()
                #context Window1.on_forward }

        def on_load(self, widget, *args):
                #context Window1.on_load {
                self.browser.load_url( self.entry1.get_text() )
                #context Window1.on_load }

        def make_browser(self, str1, str2, int1, int2):
                #context Window1.make_browser {
                widget = gtkmozembed.MozEmbed()
                widget.connect("location", self.on_browser_location)
                widget.load_url(str1)
                widget.show_all()
                return widget
                #context Window1.make_browser }

def main():
        window1 = Window1()

        window1.run()

if __name__ == "__main__":
        main()
